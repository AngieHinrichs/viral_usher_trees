name: viral_usher monthly tree update

on:
  schedule:
    # Runs first day of every month at 2:00 AM UTC
    - cron: '0 2 1 * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  # Create build jobs in order of longest-running first, for more efficient use of parallel runners
  build-trees:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        species: [rsv, dengue_1, dengue_2, dengue_3, dengue_4, polio, enterovirus_D68, hantavirus_M, hantavirus_S, measles, mumps]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install viral_usher
      run: |
        pip install --upgrade pip
        pip install viral_usher
    
    - name: Build
      run: bash scripts/build_one.sh ${{ matrix.species }}

    - name: Upload tree files
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.species }}
        path: |
          trees/${{ matrix.species }}/optimized.pb.gz
          trees/${{ matrix.species }}/viz.pb.gz
          trees/${{ matrix.species }}/metadata.tsv.gz
          trees/${{ matrix.species }}/tree.jsonl.gz


  # Final job that waits for parallel builds to complete
  upload-release:
    runs-on: ubuntu-latest
    needs: build-trees
    
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # Fetch the whole history plus tags & branches
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    # Install viral_usher just so we can report its version
    - name: Install viral_usher
      run: |
        pip install --upgrade pip
        pip install viral_usher
    
    - name: Download all species artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: "*"
        path: trees/
        merge-multiple: false
    
    - name: Generate timestamp and version
      id: timestamp
      run: |
        echo "timestamp=$(date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_OUTPUT
        echo "version=$(date +'%Y.%m.%d')" >> $GITHUB_OUTPUT
        echo "trees=$(ls trees | grep -v build_report.txt | tr '\n' ' ' | sed 's/ $//')" >> $GITHUB_OUTPUT
        echo "short_sha=${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT
    
    - name: Create summary
      run: |
        cat > trees/build_report.txt << EOF
        viral_usher monthly build
        ==========================
        
        Build Date: $(date +%F)
        Python Version: $(python --version)
        Viral Usher Version: $(pip show viral_usher | grep Version | cut -d' ' -f2)
        
        Files Generated:
        $(find trees -type f -name "*.pb.gz" -o -name "*.jsonl.gz" -o -name "*.tsv.gz" | sort)
        
        File Sizes:
        $(find trees -type f -exec ls -lh {} \; | awk '{print $5, $9}')
        EOF
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: viral-usher-analysis-${{ steps.timestamp.outputs.timestamp }}
        path: trees/
        retention-days: 15
    
    - name: Commit updated files
      run: |
        # Configure git
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add all updated files
        git add trees/
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Monthly update - ${{ steps.timestamp.outputs.timestamp }}
          
          Trees: ${{ steps.timestamp.outputs.trees }}
          Version: ${{ steps.timestamp.outputs.version }}
          SHA: ${{ steps.timestamp.outputs.short_sha }}"
          
          git push
        fi
    
    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create v${{ steps.timestamp.outputs.version }} \
            --title "viral_usher_trees ${{ steps.timestamp.outputs.version }}" \
            --notes "## Monthly update - ${{ steps.timestamp.outputs.version }}
        
        This release contains the monthly update of trees generated by viral_usher.
        
        ### Generated Files:
        - trees/ subdirectories: ${{ steps.timestamp.outputs.trees }}
        - Phylogenetic trees (Protobuf, Taxonium formats)
        - Metadata (TSV)
        
        ### Workflow Details:
        - **Commit**: ${{ steps.timestamp.outputs.short_sha }}
        - **Date**: ${{ steps.timestamp.outputs.timestamp }}"
